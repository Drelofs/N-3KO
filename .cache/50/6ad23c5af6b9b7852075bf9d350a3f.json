{"id":"CbDk","dependencies":[{"name":"/Users/julia/Documents/GitHub/N-3KO/package.json","includedInParent":true,"mtime":1557756471451},{"name":"/Users/julia/Documents/GitHub/N-3KO/node_modules/phaser/package.json","includedInParent":true,"mtime":1557756490182},{"name":"../geometry/Vertices","loc":{"line":13,"column":23},"parent":"/Users/julia/Documents/GitHub/N-3KO/node_modules/phaser/src/physics/matter-js/lib/collision/SAT.js","resolved":"/Users/julia/Documents/GitHub/N-3KO/node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js"},{"name":"../geometry/Vector","loc":{"line":14,"column":21},"parent":"/Users/julia/Documents/GitHub/N-3KO/node_modules/phaser/src/physics/matter-js/lib/collision/SAT.js","resolved":"/Users/julia/Documents/GitHub/N-3KO/node_modules/phaser/src/physics/matter-js/lib/geometry/Vector.js"}],"generated":{"js":"var e={};module.exports=e;var r=require(\"../geometry/Vertices\"),o=require(\"../geometry/Vector\");e.collides=function(t,i,a){var n,s,p,d,l=!1;if(a){var x=t.parent,v=i.parent,u=x.speed*x.speed+x.angularSpeed*x.angularSpeed+v.speed*v.speed+v.angularSpeed*v.angularSpeed;l=a&&a.collided&&u<.2,d=a}else d={collided:!1,bodyA:t,bodyB:i};if(a&&l){var c=d.axisBody,y=c===t?i:t,m=[c.axes[a.axisNumber]];if(p=e._overlapAxes(c.vertices,y.vertices,m),d.reused=!0,p.overlap<=0)return d.collided=!1,d}else{if((n=e._overlapAxes(t.vertices,i.vertices,t.axes)).overlap<=0)return d.collided=!1,d;if((s=e._overlapAxes(i.vertices,t.vertices,i.axes)).overlap<=0)return d.collided=!1,d;n.overlap<s.overlap?(p=n,d.axisBody=t):(p=s,d.axisBody=i),d.axisNumber=p.axisNumber}d.bodyA=t.id<i.id?t:i,d.bodyB=t.id<i.id?i:t,d.collided=!0,d.depth=p.overlap,d.parentA=d.bodyA.parent,d.parentB=d.bodyB.parent,t=d.bodyA,i=d.bodyB,o.dot(p.axis,o.sub(i.position,t.position))<0?d.normal={x:p.axis.x,y:p.axis.y}:d.normal={x:-p.axis.x,y:-p.axis.y},d.tangent=o.perp(d.normal),d.penetration=d.penetration||{},d.penetration.x=d.normal.x*d.depth,d.penetration.y=d.normal.y*d.depth;var f=e._findSupports(t,i,d.normal),g=[];if(r.contains(t.vertices,f[0])&&g.push(f[0]),r.contains(t.vertices,f[1])&&g.push(f[1]),g.length<2){var h=e._findSupports(i,t,o.neg(d.normal));r.contains(i.vertices,h[0])&&g.push(h[0]),g.length<2&&r.contains(i.vertices,h[1])&&g.push(h[1])}return g.length<1&&(g=[f[0]]),d.supports=g,d},e._overlapAxes=function(r,t,i){for(var a,n,s=o._temp[0],p=o._temp[1],d={overlap:Number.MAX_VALUE},l=0;l<i.length;l++){if(n=i[l],e._projectToAxis(s,r,n),e._projectToAxis(p,t,n),(a=Math.min(s.max-p.min,p.max-s.min))<=0)return d.overlap=a,d;a<d.overlap&&(d.overlap=a,d.axis=n,d.axisNumber=l)}return d},e._projectToAxis=function(e,r,t){for(var i=o.dot(r[0],t),a=i,n=1;n<r.length;n+=1){var s=o.dot(r[n],t);s>a?a=s:s<i&&(i=s)}e.min=i,e.max=a},e._findSupports=function(e,r,t){for(var i,a,n,s,p=Number.MAX_VALUE,d=o._temp[0],l=r.vertices,x=e.position,v=0;v<l.length;v++)a=l[v],d.x=a.x-x.x,d.y=a.y-x.y,(i=-o.dot(t,d))<p&&(p=i,n=a);return a=l[n.index-1>=0?n.index-1:l.length-1],d.x=a.x-x.x,d.y=a.y-x.y,p=-o.dot(t,d),s=a,a=l[(n.index+1)%l.length],d.x=a.x-x.x,d.y=a.y-x.y,(i=-o.dot(t,d))<p&&(s=a),[n,s]};"},"sourceMaps":null,"error":null,"hash":"29a3f5e28103784e68242fee9605c576","cacheData":{"env":{}}}