{"id":"NYXY","dependencies":[{"name":"/Users/julia/Documents/GitHub/N-3KO/package.json","includedInParent":true,"mtime":1557756471451},{"name":"/Users/julia/Documents/GitHub/N-3KO/node_modules/phaser/package.json","includedInParent":true,"mtime":1557756490182},{"name":"../geometry/Vertices","loc":{"line":11,"column":23},"parent":"/Users/julia/Documents/GitHub/N-3KO/node_modules/phaser/src/physics/matter-js/lib/collision/Resolver.js","resolved":"/Users/julia/Documents/GitHub/N-3KO/node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js"},{"name":"../geometry/Vector","loc":{"line":12,"column":21},"parent":"/Users/julia/Documents/GitHub/N-3KO/node_modules/phaser/src/physics/matter-js/lib/collision/Resolver.js","resolved":"/Users/julia/Documents/GitHub/N-3KO/node_modules/phaser/src/physics/matter-js/lib/geometry/Vector.js"},{"name":"../core/Common","loc":{"line":13,"column":21},"parent":"/Users/julia/Documents/GitHub/N-3KO/node_modules/phaser/src/physics/matter-js/lib/collision/Resolver.js","resolved":"/Users/julia/Documents/GitHub/N-3KO/node_modules/phaser/src/physics/matter-js/lib/core/Common.js"},{"name":"../geometry/Bounds","loc":{"line":14,"column":21},"parent":"/Users/julia/Documents/GitHub/N-3KO/node_modules/phaser/src/physics/matter-js/lib/collision/Resolver.js","resolved":"/Users/julia/Documents/GitHub/N-3KO/node_modules/phaser/src/physics/matter-js/lib/geometry/Bounds.js"}],"generated":{"js":"var i={};module.exports=i;var e=require(\"../geometry/Vertices\"),t=require(\"../geometry/Vector\"),o=require(\"../core/Common\"),s=require(\"../geometry/Bounds\");i._restingThresh=4,i._restingThreshTangent=6,i._positionDampen=.9,i._positionWarming=.8,i._frictionNormalMultiplier=5,i.preSolvePosition=function(i){var e,t,o;for(e=0;e<i.length;e++)(t=i[e]).isActive&&(o=t.activeContacts.length,t.collision.parentA.totalContacts+=o,t.collision.parentB.totalContacts+=o)},i.solvePosition=function(e,t,o){var s,n,r,p,a,l,v,m,c,u,y,g,I,x,P,f,h=o*i._positionDampen;for(s=0;s<t.length;s++){var S=t[s];S.previousPositionImpulse.x=S.positionImpulse.x,S.previousPositionImpulse.y=S.positionImpulse.y}for(s=0;s<e.length;s++)(p=e[s]).isActive&&!p.isSensor&&(l=(a=p.collision).parentA,v=a.parentB,m=a.normal,y=l.previousPositionImpulse,g=v.previousPositionImpulse,u=a.penetration,x=g.x-y.x+u.x,P=g.y-y.y+u.y,c=(n=m.x)*x+(r=m.y)*P,p.separation=c,f=(c-p.slop)*h,(l.isStatic||v.isStatic)&&(f*=2),l.isStatic||l.isSleeping||(I=f/l.totalContacts,l.positionImpulse.x+=n*I,l.positionImpulse.y+=r*I),v.isStatic||v.isSleeping||(I=f/v.totalContacts,v.positionImpulse.x-=n*I,v.positionImpulse.y-=r*I))},i.postSolvePosition=function(o){for(var n=0;n<o.length;n++){var r=o[n];if(r.totalContacts=0,0!==r.positionImpulse.x||0!==r.positionImpulse.y){for(var p=0;p<r.parts.length;p++){var a=r.parts[p];e.translate(a.vertices,r.positionImpulse),s.update(a.bounds,a.vertices,r.velocity),a.position.x+=r.positionImpulse.x,a.position.y+=r.positionImpulse.y}r.positionPrev.x+=r.positionImpulse.x,r.positionPrev.y+=r.positionImpulse.y,t.dot(r.positionImpulse,r.velocity)<0?(r.positionImpulse.x=0,r.positionImpulse.y=0):(r.positionImpulse.x*=i._positionWarming,r.positionImpulse.y*=i._positionWarming)}}},i.preSolveVelocity=function(i){var e,o,s,n,r,p,a,l,v,m,c,u,y,g,I=t._temp[0],x=t._temp[1];for(e=0;e<i.length;e++)if((s=i[e]).isActive&&!s.isSensor)for(n=s.activeContacts,p=(r=s.collision).parentA,a=r.parentB,l=r.normal,v=r.tangent,o=0;o<n.length;o++)c=(m=n[o]).vertex,u=m.normalImpulse,y=m.tangentImpulse,0===u&&0===y||(I.x=l.x*u+v.x*y,I.y=l.y*u+v.y*y,p.isStatic||p.isSleeping||(g=t.sub(c,p.position,x),p.positionPrev.x+=I.x*p.inverseMass,p.positionPrev.y+=I.y*p.inverseMass,p.anglePrev+=t.cross(g,I)*p.inverseInertia),a.isStatic||a.isSleeping||(g=t.sub(c,a.position,x),a.positionPrev.x-=I.x*a.inverseMass,a.positionPrev.y-=I.y*a.inverseMass,a.anglePrev-=t.cross(g,I)*a.inverseInertia))},i.solveVelocity=function(e,s){for(var n=s*s,r=t._temp[0],p=t._temp[1],a=t._temp[2],l=t._temp[3],v=t._temp[4],m=t._temp[5],c=0;c<e.length;c++){var u=e[c];if(u.isActive&&!u.isSensor){var y=u.collision,g=y.parentA,I=y.parentB,x=y.normal,P=y.tangent,f=u.activeContacts,h=1/f.length;g.velocity.x=g.position.x-g.positionPrev.x,g.velocity.y=g.position.y-g.positionPrev.y,I.velocity.x=I.position.x-I.positionPrev.x,I.velocity.y=I.position.y-I.positionPrev.y,g.angularVelocity=g.angle-g.anglePrev,I.angularVelocity=I.angle-I.anglePrev;for(var S=0;S<f.length;S++){var _=f[S],M=_.vertex,d=t.sub(M,g.position,p),C=t.sub(M,I.position,a),A=t.add(g.velocity,t.mult(t.perp(d),g.angularVelocity),l),V=t.add(I.velocity,t.mult(t.perp(C),I.angularVelocity),v),b=t.sub(A,V,m),T=t.dot(x,b),B=t.dot(P,b),q=Math.abs(B),W=o.sign(B),D=(1+u.restitution)*T,N=o.clamp(u.separation+T,0,1)*i._frictionNormalMultiplier,j=B,k=1/0;q>u.friction*u.frictionStatic*N*n&&(k=q,j=o.clamp(u.friction*W*n,-k,k));var w=t.cross(d,x),z=t.cross(C,x),E=h/(g.inverseMass+I.inverseMass+g.inverseInertia*w*w+I.inverseInertia*z*z);if(D*=E,j*=E,T<0&&T*T>i._restingThresh*n)_.normalImpulse=0;else{var F=_.normalImpulse;_.normalImpulse=Math.min(_.normalImpulse+D,0),D=_.normalImpulse-F}if(B*B>i._restingThreshTangent*n)_.tangentImpulse=0;else{var G=_.tangentImpulse;_.tangentImpulse=o.clamp(_.tangentImpulse+j,-k,k),j=_.tangentImpulse-G}r.x=x.x*D+P.x*j,r.y=x.y*D+P.y*j,g.isStatic||g.isSleeping||(g.positionPrev.x+=r.x*g.inverseMass,g.positionPrev.y+=r.y*g.inverseMass,g.anglePrev+=t.cross(d,r)*g.inverseInertia),I.isStatic||I.isSleeping||(I.positionPrev.x-=r.x*I.inverseMass,I.positionPrev.y-=r.y*I.inverseMass,I.anglePrev-=t.cross(C,r)*I.inverseInertia)}}}};"},"sourceMaps":null,"error":null,"hash":"2b3910187ecdf1b10f49274c093e3619","cacheData":{"env":{}}}